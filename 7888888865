local key1 = ""..math.random(49205250040467754069109857582369217350369935855722135430642769580009066869700811753595426467620471588928100772136811057477385173161510076749695413909118291326786444344157273782994899893331515905839994017996358906377775212015996944139499478691771510182008207173663789986075027926865887962260606449396699802433936744644387679539327835189488996654230649090772769992759450594076380601215908789669404985483766641023025655475682455847764502265324768369391071364492069353452028516697218862621833860729175385496735777675838586843053607858419973451090516604852090918311495462329418342018950003835536613550742720570880289992574147067638429509714631104360486148182822343208482811810846335742365682968757211815232607543625036943144194187891065853104939750678183224043249593239928720145154124304410762945154010135314167322574396991962652832270966269168090770780619732422577760561982273516797467178923343266143461820416348881939807817130812636685241170779995566201913739566535572867464081206934057078684483044232944296198706503648280967303860779847171310153226646406556567877971654856740027667835684945964987284339545775557837475160420715871805495144041299673082603350864387783047010128109134306217958942950662521023267919790891908569625122788024467058145455288243638860947061203579522603197097698685323930329754496464451881198476334024883007386332117262270631839072532149680371512779811318802121270515002611952370229825165820819327383674285463757748224028631376893762700692503594376546498855583266081172455893976873106232408017728931202685979631390356743602471340315760290987113203190487171585001354109417272291770768011617371828573911116948995620875643165934335957859045653855204386404246228077052564559449271949339459314145804228920789716234556355429646741905709565602992127763909970605796506464082942443352903766110673702926514670742166195801139054165867805100819813543152774914647804391014844925117446947311976262786346144726201472034295050039213345936168580604809145515248686292780490136471747799323034576316856382210406114284025920356295277816098978125230110182634161901930018882161111982884674466961289194776939638179536268113604890673873456414073830916176037623570371216139447943227473549961164513001517590014552619197589972777081583967642226245342489272841662855449612364446461878220518903313103202649305032062341358563821004110908065465211443284488650020302189858794948160451672798000510900173955449270258162495329362863576839724924475890696082966186199845458143480581865795039321243096839670844044152075633081509002984540827296100409412261219701275297954780937004245605323212938671496974756300562231010946272145838611136928938662236352039608638296218280373563841438679208500957697675486836972470288050174471071314127298877113982839159622021880081726786557806678751785282616124852917180991897050746205094561409183749637417405419312354294910671528139684916898852345802396690894416127851439399012888599962698112258943260458463053364108242780784693762078315983559908955518450607718704534580543849205671580922800570890277683012278808123187182389114849044583349918478470892890545558252863515158997401730840957674993327660519415765455263173862895862513376928531233731575355963775262254638679785227282445220431518978819781930945481063301676040992209340543831679800717582429102361056707398280058481375577325923596955136682181294218907433407759721050043888898774127683061498446393229709734190419781860684526685592151629294004375714506641388587717818352142431692287547711449061336178439762893532150240288471018213746614821462582737397739709747620348108388982372542566415392621220350501834654774507928238410292643767815549233837079687319502497320389617940675771142142461326955890193461722655396946786581798703874633321242504512989937206441148789900133450005662450201915295887110793564544753356758451414329876353732254577326249490063491674730805146094191964249946295542197956389784072459979601137315425787041529401982319400951341458952415054035771069744806097695184372244114643768967236982664252230900675674994121311611555691320457477728343360067171411528325496345445812844527021470169141220510814352628988419292101402140365657862295270802579732415001709099523601008467191065661232531941925084338786283616185231449233762821173521987534466406229190950167761798044839508313129989227155115884016576118262195683833274183315538527068751529107592548028732398422200470359570282681233266333526549489723665879057341356915415213186829611655481796494497439341992160049268050600867013425596876808782177747249566607088331170841710056755110140527750743065016435846878671921392641942117242229389297964000846271661325972937865254215989349248227144258701631396732634184108189194435432735609524966660428800183688174443146712810777859425282961075546477201960963447241911485312415117477669980268476324933007152033688958993373162643079784622005538209820113171463608364500409907898699498285905431537096888705543728725560133714549575874620314195779716956997827283213554062373840690119409739024514474556539937872461784519315865840355056802387596156587342894260441506598130321807642970687810247031310177118752271924457651374892126844777369533656778106654941475436212253602940129650109798505292384399307102313125980846624021217994458601217944982814456291417034788414640522512677759232635737485751459026551657611670880422615350084989369387513328617310427914720930698330561665424677173504405955951033245602086206541227055918393893992833194745892896350685755973702182603336031318342611107833974932108685513442928434337895587593934619331274742958864387592489224855072961703943041273789399399263677511420738027097098945066992831839221805261136815354324123819867479688117260824785273902633392254023557105962582460641390780680752441298698131408570722738831111908204962502274572765750155240037534523541803760924979056695680359971994195333417396381903181827030821278105351801990115303467186955110849644010261472412965091792697025536034295848150676164936889247801565210572119735813944293300299178456387458017243030494886395068599956955352747495414353866721348179162556545955708596276298463608241624528118260952133664946475377213805057902865597252242534123151837321892026744354507035272257346182008757836332563225288233526115469124914964546244951765440026579228517681850485321510919269107403914584217273743760483708553783871329655324882422238584941711582906896748339692444959516317054606992757893978458669292922454751036424423461625101424571509137329490356058520161997671989430134618883830986691296797276574175671113682476915554226102059246320608268275330027692324637378996295032017354806958576068997988440704331151342277985415704129858193734093847144381074425823793824586221159596479738469835843262396612698699103619448028756305809382338246039442294558580871777271381105331980968084007285364531800612511156937090721524042340743758505964303478429592135764524977145271786921227643268524571486421767692934881901847799474309003681947941144646788147916131797778892602698550900414585458300468537089174554125668701601258250522922117257959150492996919597501585871911705591900020924115922726993405066941726713249793289276152714466612074528567203211590027875495151770144097459350165500378491404374350821362422990392533410225403305072180986221222346338414378641132324920023564311551375298197841576267069472490647253788609202509615998474860746848200314298633000138713950407865382747628171694204796820853134610069775974905420140579729371935868125904319077158696291143036351822156623961755731044096798710491975497488625878910748939406559599748027170975984074197843119214067967977817544056009273001980938161609311623558870853378194174480887397648385263835199430453782681196497045460491736119246802416269050072135657038692798006054447841348663144745508343861935662891945258311350390047507996946931027838909159581847574990803994452655728238816212130175622425920083846075432814456502440191621880758375371245267806332558055123532523832894543815264118515814487902826419950903393151284829690998044882102471963328550113231260663725465561968860788681376668352041351196621845,49205250040467754069109857582369217350369935855722135430642769580009066869700811753595426467620471588928100772136811057477385173161510076749695413909118291326786444344157273782994899893331515905839994017996358906377775212015996944139499478691771510182008207173663789986075027926865887962260606449396699802433936744644387679539327835189488996654230649090772769992759450594076380601215908789669404985483766641023025655475682455847764502265324768369391071364492069353452028516697218862621833860729175385496735777675838586843053607858419973451090516604852090918311495462329418342018950003835536613550742720570880289992574147067638429509714631104360486148182822343208482811810846335742365682968757211815232607543625036943144194187891065853104939750678183224043249593239928720145154124304410762945154010135314167322574396991962652832270966269168090770780619732422577760561982273516797467178923343266143461820416348881939807817130812636685241170779995566201913739566535572867464081206934057078684483044232944296198706503648280967303860779847171310153226646406556567877971654856740027667835684945964987284339545775557837475160420715871805495144041299673082603350864387783047010128109134306217958942950662521023267919790891908569625122788024467058145455288243638860947061203579522603197097698685323930329754496464451881198476334024883007386332117262270631839072532149680371512779811318802121270515002611952370229825165820819327383674285463757748224028631376893762700692503594376546498855583266081172455893976873106232408017728931202685979631390356743602471340315760290987113203190487171585001354109417272291770768011617371828573911116948995620875643165934335957859045653855204386404246228077052564559449271949339459314145804228920789716234556355429646741905709565602992127763909970605796506464082942443352903766110673702926514670742166195801139054165867805100819813543152774914647804391014844925117446947311976262786346144726201472034295050039213345936168580604809145515248686292780490136471747799323034576316856382210406114284025920356295277816098978125230110182634161901930018882161111982884674466961289194776939638179536268113604890673873456414073830916176037623570371216139447943227473549961164513001517590014552619197589972777081583967642226245342489272841662855449612364446461878220518903313103202649305032062341358563821004110908065465211443284488650020302189858794948160451672798000510900173955449270258162495329362863576839724924475890696082966186199845458143480581865795039321243096839670844044152075633081509002984540827296100409412261219701275297954780937004245605323212938671496974756300562231010946272145838611136928938662236352039608638296218280373563841438679208500957697675486836972470288050174471071314127298877113982839159622021880081726786557806678751785282616124852917180991897050746205094561409183749637417405419312354294910671528139684916898852345802396690894416127851439399012888599962698112258943260458463053364108242780784693762078315983559908955518450607718704534580543849205671580922800570890277683012278808123187182389114849044583349918478470892890545558252863515158997401730840957674993327660519415765455263173862895862513376928531233731575355963775262254638679785227282445220431518978819781930945481063301676040992209340543831679800717582429102361056707398280058481375577325923596955136682181294218907433407759721050043888898774127683061498446393229709734190419781860684526685592151629294004375714506641388587717818352142431692287547711449061336178439762893532150240288471018213746614821462582737397739709747620348108388982372542566415392621220350501834654774507928238410292643767815549233837079687319502497320389617940675771142142461326955890193461722655396946786581798703874633321242504512989937206441148789900133450005662450201915295887110793564544753356758451414329876353732254577326249490063491674730805146094191964249946295542197956389784072459979601137315425787041529401982319400951341458952415054035771069744806097695184372244114643768967236982664252230900675674994121311611555691320457477728343360067171411528325496345445812844527021470169141220510814352628988419292101402140365657862295270802579732415001709099523601008467191065661232531941925084338786283616185231449233762821173521987534466406229190950167761798044839508313129989227155115884016576118262195683833274183315538527068751529107592548028732398422200470359570282681233266333526549489723665879057341356915415213186829611655481796494497439341992160049268050600867013425596876808782177747249566607088331170841710056755110140527750743065016435846878671921392641942117242229389297964000846271661325972937865254215989349248227144258701631396732634184108189194435432735609524966660428800183688174443146712810777859425282961075546477201960963447241911485312415117477669980268476324933007152033688958993373162643079784622005538209820113171463608364500409907898699498285905431537096888705543728725560133714549575874620314195779716956997827283213554062373840690119409739024514474556539937872461784519315865840355056802387596156587342894260441506598130321807642970687810247031310177118752271924457651374892126844777369533656778106654941475436212253602940129650109798505292384399307102313125980846624021217994458601217944982814456291417034788414640522512677759232635737485751459026551657611670880422615350084989369387513328617310427914720930698330561665424677173504405955951033245602086206541227055918393893992833194745892896350685755973702182603336031318342611107833974932108685513442928434337895587593934619331274742958864387592489224855072961703943041273789399399263677511420738027097098945066992831839221805261136815354324123819867479688117260824785273902633392254023557105962582460641390780680752441298698131408570722738831111908204962502274572765750155240037534523541803760924979056695680359971994195333417396381903181827030821278105351801990115303467186955110849644010261472412965091792697025536034295848150676164936889247801565210572119735813944293300299178456387458017243030494886395068599956955352747495414353866721348179162556545955708596276298463608241624528118260952133664946475377213805057902865597252242534123151837321892026744354507035272257346182008757836332563225288233526115469124914964546244951765440026579228517681850485321510919269107403914584217273743760483708553783871329655324882422238584941711582906896748339692444959516317054606992757893978458669292922454751036424423461625101424571509137329490356058520161997671989430134618883830986691296797276574175671113682476915554226102059246320608268275330027692324637378996295032017354806958576068997988440704331151342277985415704129858193734093847144381074425823793824586221159596479738469835843262396612698699103619448028756305809382338246039442294558580871777271381105331980968084007285364531800612511156937090721524042340743758505964303478429592135764524977145271786921227643268524571486421767692934881901847799474309003681947941144646788147916131797778892602698550900414585458300468537089174554125668701601258250522922117257959150492996919597501585871911705591900020924115922726993405066941726713249793289276152714466612074528567203211590027875495151770144097459350165500378491404374350821362422990392533410225403305072180986221222346338414378641132324920023564311551375298197841576267069472490647253788609202509615998474860746848200314298633000138713950407865382747628171694204796820853134610069775974905420140579729371935868125904319077158696291143036351822156623961755731044096798710491975497488625878910748939406559599748027170975984074197843119214067967977817544056009273001980938161609311623558870853378194174480887397648385263835199430453782681196497045460491736119246802416269050072135657038692798006054447841348663144745508343861935662891945258311350390047507996946931027838909159581847574990803994452655728238816212130175622425920083846075432814456502440191621880758375371245267806332558055123532523832894543815264118515814487902826419950903393151284829690998044882102471963328550113231260663725465561968860788681376668352041351196621845)
local Rayfield = loadstring(game:HttpGet('https://raw.githubusercontent.com/shlexware/Rayfield/main/source'))()      
-- Windows
local Window = Rayfield:CreateWindow({
    Name = "Update Logs WIll Be here soon",
    LoadingTitle = "Rayfield Interface Suite",
    LoadingSubtitle = "by ToggleHub",
    KeySystem = true,
    KeySettings = {
        Title = "Toggle Hub",
        Subtitle = "Key System",
        Note = "Welcome Back Alpha ",
        Key = key1
    }
    })
local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))()
local Window = Library.CreateLib("Toggle Hub | PF | beta", "DarkTheme")

local Tab = Window:NewTab("Main")
local Section = Tab:NewSection("Section Name")

Section:NewToggle("silent aim toggle", "makes it so you always hit the other team", function(state)
    if state then
        _G.SilentAim={
            Enabled=true,--true,false  set to true to enable silent aim
            Target="Torso",--All,Head,Torso,Left Leg,Right Leg,Left Arm,Right Arm  target for silent aim (due to the shittyness of the script it probly will just hit the legs or torso)
            Auto_Shoot=false,--true,false  automaticly shoots when a play is in your fov 
            Auto_Wall=false,--true,false  automaticly targets players if they cna be penetrated by gun (may break with attachments)
            Fov=100,--0-inf  set fov size
            Show_Fov=true,--true,false   show fov circle
            Fov_Color=Color3.fromRGB(0,1,0),--rgb  circle color
            Ignore_Fov=false,--true,false  disable or enable fov chck
        }
        if _G.SilentAim.Target=="All"then
            _G.SilentAim.Target={"Head","Torso","Left Leg","Right Leg","Left Arm","Right Arm"}
        else
            _G.SilentAim.Target={_G.SilentAim.Target}
        end
        if _G.SilentWall then return else _G.SilentWall="you would not belive how long it took to code auto wall with tihs new update"end
        local IsAlive=function()--check if player is alive
            if game.Players.LocalPlayer.Character and not game.Workspace:FindFirstChild("MenuLobby")then
                return true
            end
            return false
        end
        local NotGuns={"ONE HAND BLUNT","TWO HAND BLADE","EQUIPMENT","FRAGMENTATION","IMPACT","ONE HAND BLADE","TWO HAND BLUNT","HIGH EXPLOSIVE"}--production folder >:)
        local guns={}--gun table
        --V gun pen depths (cannot get these without decompiling modules so i added this)
        local gunpendepths={None=0,["M14 BR"]=1.8,HK417=1.6,L22=0.9,["HECATE II"]=10,["M79 THUMPER"]=0.5,["AS VAL"]=1,MP1911=0.5,["GI M1"]=1,["TEC-9"]=0.5,GSP=0.1,["GLOCK 18"]=0.5,["GB-22"]=0.5,X95R=1,M16A3=1.2,["SCAR SSR"]=2.6,["STEYR SCOUT"]=3,K2=1,MG36=1.8,["AUTO 9"]=1,MP5SD=0.5,MAC10=0.5,UZI=0.7,["COLT MARS"]=1.5,["SAIGA-12U"]=0.4,["FAL PARA SHORTY"]=1.4,L115A3=3,MP40=1.1,["AN-94"]=1,["ARM PISTOL"]=0.9,BLOCKSON=0.5,MP5K=0.5,["MAKAROV PM"]=0.5,["L86 LSW"]=1.6,AK12=1,["BOXY BUSTER"]=0,["BEOWULF ECR"]=1.9,EXECUTIONER=1,["DRAGUNOV SVU"]=2.8,M16A4=1.2,M1903=5,["TOMMY GUN"]=0.5,["SCAR-H"]=1.5,G36K=1.1,AK74=1,JURY=1,["1858 CARBINE"]=0.5,["GLOCK 40"]=0.8,["BEOWULF TCR"]=3,["1858 NEW ARMY"]=0.5,M4=1,["NTW-20"]=20,HK51B=1,9,C8A2=0.8,MP7=1.5,AK47=1.4,MC51SD=1.5,KRINKOV=0.9,["GOLDEN ZIP 22"]=0.5,["KAC SRR"]=1,["TRG-42"]=3,["KRISS VECTOR"]=0.5,["RAMA 1130"]=0.5,["SR-3M"]=1,["SCAR PDW"]=0.9,["FAL 50.63 PARA"]=2,["E SHOTGUN"]=0.5,M1911=0.5,["AG-3"]=2,M231=1,K7=0.5,AKM=1.4,SKS=1.5,K1A=0.75,["GYROJET MARK I"]=0.5,["M14 DMR"]=2.4,["MICRO UZI"]=0.5,["PPSH-41"]=1,["REMINGTON 870"]=0.5,["VSS VINTOREZ"]=1.5,MK11=1.7,MSG90=2,["SL-8"]=1.3,M3A1=0.5,["GLOCK 17"]=0.5,["SASS 308"]=2,FT300=3,RPK74=1.6,["KS-23M"]=0.7,["AA-12"]=0.3,M7644=0.5,ALIEN=0.5,["TAR-21"]=1.2,["SCAR HAMR"]=1.4,MG3KWS=2,["GOLDEN HK51B"]=0.3,HK21=1.6,MG42=2.5,["AUG A3"]=1,["SA58 SPR"]=2,["BFG 50"]=10,["SAIGA-12"]=.5,AKU12=1,["FAL 50.00"]=2,FAMAS=1,["TYPE 88"]=.9,["REDHAWK 44"]=1,GRIZZLY=1.3,["COLT LMG"]=1.4,MP10=0.5,RAILGUN=200,["HENRY 45-70"]=2,["MP412 REX"]=.5,WA2000=2.8,["DEAGLE 44"]=1,["GLOCK 50"]=1,["GLOCK 21"]=0.7,HARDBALLER=1.2,M4A1=1,M9=0.5,["GOLDEN TOMMY GUN"]=0.5,["GOLDEN REDHAWK 45"]=0.5,["SCAR-L"]=1,["STG-44"]=1.6,P90=2,["DEAGLE 50"]=1.3,MP5=0.5,["AUG A3 PARA"]=0.5,["TOY M1911"]=0,["REMINGTON 700"]=3,["PP-2000"]=1,["MP5/10"]=0.8,AK12BR=2,["KG-99"]=0.5,UMP45=1.4,["ZIP 22"]=0.5,["GLOCK 1"]=0.5,C7A2=0.9,["SERBU SHOTGUN"]=0.6,["AUG A1"]=1,["COLT SMG 635"]=0.5,RPK12=1.6,["FIVE SEVEN"]=1.5,["DT11 PRO"]=.7,["GYROJET CARBINE"]=0.7,["OTs-126"]=1.2,M93R=0.5,DBV12=0.5,M45A1=0.5,["SAWED OFF"]=0.6,G36C=1,["SFG 50"]=10,["E GUN"]=0.5,SKORPION=0.5,OBREZ=2,RPK=1.8,["ROPOD SHOTTY"]=1.5,M41A=1,["GROZA-1"]=1.5,["GOLDEN SHORTY"]=0.1,["GROZA-4"]=1.5,M2011=0.5,["GLOCK 23"]=0.8,["KSG 12"]=0.4,["USAS-12"]=0.3,M60=3,["MOSIN NAGANT"]=4,["HONEY BADGER"]=1.3,["SPAS-12"]=0.6,["AM III"]=1.2,["STEVENS DB"]=0.5,["DRAGUNOV SVDS"]=3.2,["AUG HBAR"]=1.6,K14=3,["CAN CANNON"]=1.2,["AUG A2"]=1,AK103=1.4,AWS=2,INTERVENTION=6,["X95 SMG"]=0.7,["MATEBA 6"]=1,JUDGE=1,G36=1.3,["PP-19 BIZON"]=0.5,M107=10,G3=1.5,["GOLDEN DEAGLE 50"]=1.5,AK12C=1.2,L2A3=1.1,["GOLDEN DEAGLE 2"]=1.5,ASMI=0.5,["IZHEVSK PB"]=0.5,AK105=1,M3822=0.5,L85A2=1.2,["HOWA TYPE 20"]=1.4,HK416=1,M16A1=0.8,G11K2=2}
        local StringToTable=function(string)--string to table function used in find broken module penetratrion
            local a={}
            for i=1,string.len(string)do
                a[#a+1]=string.sub(string,i,i)
            end
            return a
        end
        local FindBrokenModulePenetration=function(modulescript)--find broken module penetratrion used in new updates
            local gundata=decompile(modulescript)--you cant require anymore
            local exists,penstart=string.find(gundata,"v1.penetrationdepth = ")
            if not exists then return 0 end
            local pendata=string.sub(gundata,penstart,penstart+4)
            local number=""
            for _,v in pairs(StringToTable(pendata))do
                if tonumber(v)or v=="."then
                    number=number..v
                end
            end
            return tonumber(number)
        end
        local weapondata={}--my shitty gun detection (it works fuck u)
        for _,v in pairs(game:GetService("ReplicatedStorage").Content.ProductionContent.WeaponDatabase:GetChildren())do
            for _,c in pairs(v:GetChildren())do
                if c:FindFirstChild("Main")then
                    weapondata[c.Name]={Union={},MeshPart={}}
                    for _,x in pairs(c.Main:GetChildren())do
                        if x:IsA("MeshPart")then
                            weapondata[c.Name].MeshPart[x.MeshId]=x.MeshId
                        elseif x:IsA("Union")then
                            weapondata[c.Name].Union[x.AssetId]=x.AssetId
                        end
                    end
                end
            end
            if not table.find(NotGuns,v.Name)then
                for _,c in pairs(v:GetChildren())do
                    guns[c]=c.Name
                end
            end
        end
        for i,v in pairs(guns)do--if there is a new update it will detect the weapons and try to add the new penetratrion depths
            if not gunpendepths[v]then
                local depth=FindBrokenModulePenetration(i[v])
                gunpendepths[v]=depth
                print("Error, Missing "..v..", Error Depth Recovery Found "..depth.." As Penetration, Please Contact The Dev To Fix https://discord.gg/vQQqcgBWCG")
            end
        end
        local GetGunName=function()--get weapon from closest model from camera?! omg shut up ik its stupid but it works quit bullying me
            if not IsAlive()then return"None"end
            local curdata={Union={},MeshPart={}}
            for _,v in pairs(game.Workspace.CurrentCamera.Main:GetChildren())do
                if v:IsA("MeshPart")then
                    curdata.MeshPart[v.MeshId]=v.MeshId
                elseif v:IsA("Union")then
                    curdata.Union[v.AssetId]=v.AssetId
                end
            end
            local matches={}
            for i,v in pairs(weapondata)do
                for i2,c in pairs(v)do
                    for _,x in pairs(c)do
                        if x==curdata[i2][x]then
                            if matches[i]then
                                matches[i]=matches[i]+1
                            else
                                matches[i]=1
                            end
                        end
                    end
                end
            end
            local a=0
            local closest="None"
            for i,v in pairs(matches)do
                if v>a then
                    a=v
                    closest=i
                end
            end
            return closest
        end
        local GetEnemys=function()--simple ass get enemys
            local players={}
            local characters={}
            local enemyteam
            for _,v in pairs(game.Players:GetChildren())do
                if v.Team~=game.Players.LocalPlayer.Team then
                    enemyteam=tostring(v.TeamColor)
                    players[#players+1]=v
                end
            end
            if not enemyteam then
                enemyteam="Bright orange"
                if game.Players.LocalPlayer.Team.Name=="Ghosts"then
                    enemyteam="Bright blue"
                end
            end
            for _,v in pairs(game.Workspace.Players[enemyteam]:GetChildren())do
                characters[#characters+1]=v
            end
            return{characters,players}
        end
        local GetDirChange=function()--get bullet direction changes
            local a={}
            if game.Workspace.CurrentCamera:FindFirstChild("Main")then
                for _,v in pairs(game.Workspace.CurrentCamera.Main:GetChildren())do
                    if string.find(string.lower(tostring(v)),"flame")or string.find(string.lower(tostring(v)),"sightmark")then
                        a[#a+1]=v
                    end
                end
            end
            return a
        end
        local Ignore={game.Workspace.CurrentCamera,game.Workspace.Ignore}--old ignore stuff (still works lul)
        local function CanSee(Target,Penetrate,PenDepth)
            if not Penetrate then PenDepth=0 end
            local Dir=Target.Position-game.Workspace.CurrentCamera.CFrame.Position
            local InitCast=game.Workspace:FindPartOnRayWithIgnoreList(Ray.new(game.Workspace.CurrentCamera.CFrame.Position,Dir),Ignore,false,true)
            if not InitCast then
                return true
            end
            local Penetrated=0
            for _,v in pairs(game.Workspace.CurrentCamera:GetPartsObscuringTarget({Target.Position},Ignore))do
                if v.CanCollide and v.Transparency~=1 and v.Name~="Window"then
                    local MaxExtent=v.Size.Magnitude*Dir.Unit;
                    local _,Enter=game.Workspace:FindPartOnRayWithWhitelist(Ray.new(game.Workspace.CurrentCamera.CFrame.Position,Dir),{v},true)
                    local _,Exit=game.Workspace:FindPartOnRayWithWhitelist(Ray.new(Enter+MaxExtent,-MaxExtent),{v},true)
                    local Depth=(Exit-Enter).Magnitude;
                    if Depth>PenDepth then
                        return false;
                    else
                        Penetrated=Penetrated+Depth;
                    end
                else
                    table.insert(Ignore,v)
                end
            end
            return Penetrated<PenDepth
        end
        local istyping=false--auto shoot bs
        game.UserInputService.InputBegan:Connect(function(_,typing)
            istyping=typing
        end)
        game.UserInputService.InputEnded:Connect(function(_,typing)
            istyping=typing
        end)
        local target
        local mouseisdown=false
        game.RunService.RenderStepped:Connect(function()
            target=nil--reset targets
            if _G.SilentAim.Enabled and IsAlive()then--are we alive and enabled?
                local a=math.huge
                local penetratrion=gunpendepths[GetGunName()]
                for _,v in pairs(GetEnemys()[1])do--get characters
                    for _,c in pairs(_G.SilentAim.Target)do--get part target list
                        local main=v[c]--part to detect
                        local mainmag=(main.Position-game.Workspace.CurrentCamera.CFrame.Position).Magnitude--distance between us
                        if _G.SilentAim.Ignore_Fov then--is ignoring fov
                            if mainmag<a and CanSee(main,_G.SilentAim.Auto_Wall,penetratrion)then
                                a=mainmag
                                target=main
                            end
                        else--i dont wanna explain the lower part just figure it out
                            local center=game.Workspace.CurrentCamera:WorldToViewportPoint(game.Workspace.CurrentCamera.CFrame.Position+game.Workspace.CurrentCamera.CFrame.LookVector)
                            local partloc,isvisible=game.Workspace.CurrentCamera:WorldToScreenPoint(main.Position)
                            if --[[isvisible and]](Vector2.new(partloc.X,partloc.Y)-Vector2.new(center.X,center.Y)).Magnitude<=_G.SilentAim.Fov then
                                if mainmag<a and CanSee(main,_G.SilentAim.Auto_Wall,penetratrion)then
                                    target=main
                                    a=mainmag
                                end
                            end
                        end
                    end
                end
                if target then--have we has target :D
                    for _,v in pairs(GetDirChange())do--our direction changes >:)
                        v.Position=game.Workspace.CurrentCamera.CFrame.Position
                        v.Velocity=Vector3.new()--because we remove welds later >:)
                        local weld=v:FindFirstChildWhichIsA("Weld")or v:FindFirstChildWhichIsA("WeldConstraint")
                        if weld then
                            weld:Destroy()--remove weld to remove swat to affecte accuracy
                        end
                        local x,y,z=CFrame.new(v.Position,target.Position+Vector3.new(0,.45--[[add half a block ofheigth because we can cause we can afford it]],0)):ToEulerAnglesYXZ()
                        v.Orientation=Vector3.new(math.deg(x),math.deg(y),math.deg(z))--my very first silent aim i made came in handy LOL
                    end
                    if _G.SilentAim.Auto_Shoot and iswindowactive()and not istyping and not mouseisdown then
                        coroutine.wrap(function()--so it dont bug out
                            mouse1press()--stoopid method for auto shoot but hey cant get require anymore so fuck it
                            mouseisdown=true
                            wait()
                            mouse1release()
                            mouseisdown=false
                        end)()
                    end
                else
                    local straight=game.Workspace.CurrentCamera.CFrame.LookVector*100000
                    for _,v in pairs(GetDirChange())do--fix bullet angle if we nolonger has target
                        v.Position=game.Workspace.CurrentCamera.CFrame.Position
                        v.Velocity=Vector3.new()--because we remove welds later >:)
                        local weld=v:FindFirstChildWhichIsA("Weld")or v:FindFirstChildWhichIsA("WeldConstraint")
                        if weld then
                            weld:Destroy()
                        end
                        local x,y,z=CFrame.new(v.Position,straight):ToEulerAnglesYXZ()
                        v.Orientation=Vector3.new(math.deg(x),math.deg(y),math.deg(z))
                    end
                end
            end
        end)
        coroutine.wrap(function()--our fov circle fuck you figure it out urself
            while wait(1)do
                pcall(function()
                    if _G.SilentAim.Enabled and _G.SilentAim.Show_Fov and not _G.SilentAim.Ignore_Fov then
                        local center=game.Workspace.CurrentCamera:WorldToViewportPoint(game.Workspace.CurrentCamera.CFrame.Position+game.Workspace.CurrentCamera.CFrame.LookVector)
                        local a=Drawing.new("Circle")
                        a.Visible=true
                        a.Position=Vector2.new(center.X,center.Y)
                        a.Color=_G.SilentAim.Fov_Color
                        a.Thickness=2.5
                        a.Transparency=1
                        a.NumSides=100
                        a.Radius=_G.SilentAim.Fov
                        coroutine.wrap(function()
                            wait(1.1)
                            a:Remove()
                        end)()
                    end
                end)
            end
        end)()
        
    else
        _G.SilentAim={
            Enabled=false,--true,false  set to true to enable silent aim
            Target="Torso",--All,Head,Torso,Left Leg,Right Leg,Left Arm,Right Arm  target for silent aim (due to the shittyness of the script it probly will just hit the legs or torso)
            Auto_Shoot=false,--true,false  automaticly shoots when a play is in your fov 
            Auto_Wall=false,--true,false  automaticly targets players if they cna be penetrated by gun (may break with attachments)
            Fov=75,--0-inf  set fov size
            Show_Fov=false,--true,false   show fov circle
            Fov_Color=Color3.fromRGB(0,1,0),--rgb  circle color
            Ignore_Fov=false,--true,false  disable or enable fov chck
        }
        if _G.SilentAim.Target=="All"then
            _G.SilentAim.Target={"Head","Torso","Left Leg","Right Leg","Left Arm","Right Arm"}
        else
            _G.SilentAim.Target={_G.SilentAim.Target}
        end
        if _G.SilentWall then return else _G.SilentWall="you would not belive how long it took to code auto wall with tihs new update"end
        local IsAlive=function()--check if player is alive
            if game.Players.LocalPlayer.Character and not game.Workspace:FindFirstChild("MenuLobby")then
                return true
            end
            return false
        end
        local NotGuns={"ONE HAND BLUNT","TWO HAND BLADE","EQUIPMENT","FRAGMENTATION","IMPACT","ONE HAND BLADE","TWO HAND BLUNT","HIGH EXPLOSIVE"}--production folder >:)
        local guns={}--gun table
        --V gun pen depths (cannot get these without decompiling modules so i added this)
        local gunpendepths={None=0,["M14 BR"]=1.8,HK417=1.6,L22=0.9,["HECATE II"]=10,["M79 THUMPER"]=0.5,["AS VAL"]=1,MP1911=0.5,["GI M1"]=1,["TEC-9"]=0.5,GSP=0.1,["GLOCK 18"]=0.5,["GB-22"]=0.5,X95R=1,M16A3=1.2,["SCAR SSR"]=2.6,["STEYR SCOUT"]=3,K2=1,MG36=1.8,["AUTO 9"]=1,MP5SD=0.5,MAC10=0.5,UZI=0.7,["COLT MARS"]=1.5,["SAIGA-12U"]=0.4,["FAL PARA SHORTY"]=1.4,L115A3=3,MP40=1.1,["AN-94"]=1,["ARM PISTOL"]=0.9,BLOCKSON=0.5,MP5K=0.5,["MAKAROV PM"]=0.5,["L86 LSW"]=1.6,AK12=1,["BOXY BUSTER"]=0,["BEOWULF ECR"]=1.9,EXECUTIONER=1,["DRAGUNOV SVU"]=2.8,M16A4=1.2,M1903=5,["TOMMY GUN"]=0.5,["SCAR-H"]=1.5,G36K=1.1,AK74=1,JURY=1,["1858 CARBINE"]=0.5,["GLOCK 40"]=0.8,["BEOWULF TCR"]=3,["1858 NEW ARMY"]=0.5,M4=1,["NTW-20"]=20,HK51B=1,9,C8A2=0.8,MP7=1.5,AK47=1.4,MC51SD=1.5,KRINKOV=0.9,["GOLDEN ZIP 22"]=0.5,["KAC SRR"]=1,["TRG-42"]=3,["KRISS VECTOR"]=0.5,["RAMA 1130"]=0.5,["SR-3M"]=1,["SCAR PDW"]=0.9,["FAL 50.63 PARA"]=2,["E SHOTGUN"]=0.5,M1911=0.5,["AG-3"]=2,M231=1,K7=0.5,AKM=1.4,SKS=1.5,K1A=0.75,["GYROJET MARK I"]=0.5,["M14 DMR"]=2.4,["MICRO UZI"]=0.5,["PPSH-41"]=1,["REMINGTON 870"]=0.5,["VSS VINTOREZ"]=1.5,MK11=1.7,MSG90=2,["SL-8"]=1.3,M3A1=0.5,["GLOCK 17"]=0.5,["SASS 308"]=2,FT300=3,RPK74=1.6,["KS-23M"]=0.7,["AA-12"]=0.3,M7644=0.5,ALIEN=0.5,["TAR-21"]=1.2,["SCAR HAMR"]=1.4,MG3KWS=2,["GOLDEN HK51B"]=0.3,HK21=1.6,MG42=2.5,["AUG A3"]=1,["SA58 SPR"]=2,["BFG 50"]=10,["SAIGA-12"]=.5,AKU12=1,["FAL 50.00"]=2,FAMAS=1,["TYPE 88"]=.9,["REDHAWK 44"]=1,GRIZZLY=1.3,["COLT LMG"]=1.4,MP10=0.5,RAILGUN=200,["HENRY 45-70"]=2,["MP412 REX"]=.5,WA2000=2.8,["DEAGLE 44"]=1,["GLOCK 50"]=1,["GLOCK 21"]=0.7,HARDBALLER=1.2,M4A1=1,M9=0.5,["GOLDEN TOMMY GUN"]=0.5,["GOLDEN REDHAWK 45"]=0.5,["SCAR-L"]=1,["STG-44"]=1.6,P90=2,["DEAGLE 50"]=1.3,MP5=0.5,["AUG A3 PARA"]=0.5,["TOY M1911"]=0,["REMINGTON 700"]=3,["PP-2000"]=1,["MP5/10"]=0.8,AK12BR=2,["KG-99"]=0.5,UMP45=1.4,["ZIP 22"]=0.5,["GLOCK 1"]=0.5,C7A2=0.9,["SERBU SHOTGUN"]=0.6,["AUG A1"]=1,["COLT SMG 635"]=0.5,RPK12=1.6,["FIVE SEVEN"]=1.5,["DT11 PRO"]=.7,["GYROJET CARBINE"]=0.7,["OTs-126"]=1.2,M93R=0.5,DBV12=0.5,M45A1=0.5,["SAWED OFF"]=0.6,G36C=1,["SFG 50"]=10,["E GUN"]=0.5,SKORPION=0.5,OBREZ=2,RPK=1.8,["ROPOD SHOTTY"]=1.5,M41A=1,["GROZA-1"]=1.5,["GOLDEN SHORTY"]=0.1,["GROZA-4"]=1.5,M2011=0.5,["GLOCK 23"]=0.8,["KSG 12"]=0.4,["USAS-12"]=0.3,M60=3,["MOSIN NAGANT"]=4,["HONEY BADGER"]=1.3,["SPAS-12"]=0.6,["AM III"]=1.2,["STEVENS DB"]=0.5,["DRAGUNOV SVDS"]=3.2,["AUG HBAR"]=1.6,K14=3,["CAN CANNON"]=1.2,["AUG A2"]=1,AK103=1.4,AWS=2,INTERVENTION=6,["X95 SMG"]=0.7,["MATEBA 6"]=1,JUDGE=1,G36=1.3,["PP-19 BIZON"]=0.5,M107=10,G3=1.5,["GOLDEN DEAGLE 50"]=1.5,AK12C=1.2,L2A3=1.1,["GOLDEN DEAGLE 2"]=1.5,ASMI=0.5,["IZHEVSK PB"]=0.5,AK105=1,M3822=0.5,L85A2=1.2,["HOWA TYPE 20"]=1.4,HK416=1,M16A1=0.8,G11K2=2}
        local StringToTable=function(string)--string to table function used in find broken module penetratrion
            local a={}
            for i=1,string.len(string)do
                a[#a+1]=string.sub(string,i,i)
            end
            return a
        end
        local FindBrokenModulePenetration=function(modulescript)--find broken module penetratrion used in new updates
            local gundata=decompile(modulescript)--you cant require anymore
            local exists,penstart=string.find(gundata,"v1.penetrationdepth = ")
            if not exists then return 0 end
            local pendata=string.sub(gundata,penstart,penstart+4)
            local number=""
            for _,v in pairs(StringToTable(pendata))do
                if tonumber(v)or v=="."then
                    number=number..v
                end
            end
            return tonumber(number)
        end
        local weapondata={}--my shitty gun detection (it works fuck u)
        for _,v in pairs(game:GetService("ReplicatedStorage").Content.ProductionContent.WeaponDatabase:GetChildren())do
            for _,c in pairs(v:GetChildren())do
                if c:FindFirstChild("Main")then
                    weapondata[c.Name]={Union={},MeshPart={}}
                    for _,x in pairs(c.Main:GetChildren())do
                        if x:IsA("MeshPart")then
                            weapondata[c.Name].MeshPart[x.MeshId]=x.MeshId
                        elseif x:IsA("Union")then
                            weapondata[c.Name].Union[x.AssetId]=x.AssetId
                        end
                    end
                end
            end
            if not table.find(NotGuns,v.Name)then
                for _,c in pairs(v:GetChildren())do
                    guns[c]=c.Name
                end
            end
        end
        for i,v in pairs(guns)do--if there is a new update it will detect the weapons and try to add the new penetratrion depths
            if not gunpendepths[v]then
                local depth=FindBrokenModulePenetration(i[v])
                gunpendepths[v]=depth
                print("Error, Missing "..v..", Error Depth Recovery Found "..depth.." As Penetration, Please Contact The Dev To Fix https://discord.gg/vQQqcgBWCG")
            end
        end
        local GetGunName=function()--get weapon from closest model from camera?! omg shut up ik its stupid but it works quit bullying me
            if not IsAlive()then return"None"end
            local curdata={Union={},MeshPart={}}
            for _,v in pairs(game.Workspace.CurrentCamera.Main:GetChildren())do
                if v:IsA("MeshPart")then
                    curdata.MeshPart[v.MeshId]=v.MeshId
                elseif v:IsA("Union")then
                    curdata.Union[v.AssetId]=v.AssetId
                end
            end
            local matches={}
            for i,v in pairs(weapondata)do
                for i2,c in pairs(v)do
                    for _,x in pairs(c)do
                        if x==curdata[i2][x]then
                            if matches[i]then
                                matches[i]=matches[i]+1
                            else
                                matches[i]=1
                            end
                        end
                    end
                end
            end
            local a=0
            local closest="None"
            for i,v in pairs(matches)do
                if v>a then
                    a=v
                    closest=i
                end
            end
            return closest
        end
        local GetEnemys=function()--simple ass get enemys
            local players={}
            local characters={}
            local enemyteam
            for _,v in pairs(game.Players:GetChildren())do
                if v.Team~=game.Players.LocalPlayer.Team then
                    enemyteam=tostring(v.TeamColor)
                    players[#players+1]=v
                end
            end
            if not enemyteam then
                enemyteam="Bright orange"
                if game.Players.LocalPlayer.Team.Name=="Ghosts"then
                    enemyteam="Bright blue"
                end
            end
            for _,v in pairs(game.Workspace.Players[enemyteam]:GetChildren())do
                characters[#characters+1]=v
            end
            return{characters,players}
        end
        local GetDirChange=function()--get bullet direction changes
            local a={}
            if game.Workspace.CurrentCamera:FindFirstChild("Main")then
                for _,v in pairs(game.Workspace.CurrentCamera.Main:GetChildren())do
                    if string.find(string.lower(tostring(v)),"flame")or string.find(string.lower(tostring(v)),"sightmark")then
                        a[#a+1]=v
                    end
                end
            end
            return a
        end
        local Ignore={game.Workspace.CurrentCamera,game.Workspace.Ignore}--old ignore stuff (still works lul)
        local function CanSee(Target,Penetrate,PenDepth)
            if not Penetrate then PenDepth=0 end
            local Dir=Target.Position-game.Workspace.CurrentCamera.CFrame.Position
            local InitCast=game.Workspace:FindPartOnRayWithIgnoreList(Ray.new(game.Workspace.CurrentCamera.CFrame.Position,Dir),Ignore,false,true)
            if not InitCast then
                return true
            end
            local Penetrated=0
            for _,v in pairs(game.Workspace.CurrentCamera:GetPartsObscuringTarget({Target.Position},Ignore))do
                if v.CanCollide and v.Transparency~=1 and v.Name~="Window"then
                    local MaxExtent=v.Size.Magnitude*Dir.Unit;
                    local _,Enter=game.Workspace:FindPartOnRayWithWhitelist(Ray.new(game.Workspace.CurrentCamera.CFrame.Position,Dir),{v},true)
                    local _,Exit=game.Workspace:FindPartOnRayWithWhitelist(Ray.new(Enter+MaxExtent,-MaxExtent),{v},true)
                    local Depth=(Exit-Enter).Magnitude;
                    if Depth>PenDepth then
                        return false;
                    else
                        Penetrated=Penetrated+Depth;
                    end
                else
                    table.insert(Ignore,v)
                end
            end
            return Penetrated<PenDepth
        end
        local istyping=false--auto shoot bs
        game.UserInputService.InputBegan:Connect(function(_,typing)
            istyping=typing
        end)
        game.UserInputService.InputEnded:Connect(function(_,typing)
            istyping=typing
        end)
        local target
        local mouseisdown=false
        game.RunService.RenderStepped:Connect(function()
            target=nil--reset targets
            if _G.SilentAim.Enabled and IsAlive()then--are we alive and enabled?
                local a=math.huge
                local penetratrion=gunpendepths[GetGunName()]
                for _,v in pairs(GetEnemys()[1])do--get characters
                    for _,c in pairs(_G.SilentAim.Target)do--get part target list
                        local main=v[c]--part to detect
                        local mainmag=(main.Position-game.Workspace.CurrentCamera.CFrame.Position).Magnitude--distance between us
                        if _G.SilentAim.Ignore_Fov then--is ignoring fov
                            if mainmag<a and CanSee(main,_G.SilentAim.Auto_Wall,penetratrion)then
                                a=mainmag
                                target=main
                            end
                        else--i dont wanna explain the lower part just figure it out
                            local center=game.Workspace.CurrentCamera:WorldToViewportPoint(game.Workspace.CurrentCamera.CFrame.Position+game.Workspace.CurrentCamera.CFrame.LookVector)
                            local partloc,isvisible=game.Workspace.CurrentCamera:WorldToScreenPoint(main.Position)
                            if --[[isvisible and]](Vector2.new(partloc.X,partloc.Y)-Vector2.new(center.X,center.Y)).Magnitude<=_G.SilentAim.Fov then
                                if mainmag<a and CanSee(main,_G.SilentAim.Auto_Wall,penetratrion)then
                                    target=main
                                    a=mainmag
                                end
                            end
                        end
                    end
                end
                if target then--have we has target :D
                    for _,v in pairs(GetDirChange())do--our direction changes >:)
                        v.Position=game.Workspace.CurrentCamera.CFrame.Position
                        v.Velocity=Vector3.new()--because we remove welds later >:)
                        local weld=v:FindFirstChildWhichIsA("Weld")or v:FindFirstChildWhichIsA("WeldConstraint")
                        if weld then
                            weld:Destroy()--remove weld to remove swat to affecte accuracy
                        end
                        local x,y,z=CFrame.new(v.Position,target.Position+Vector3.new(0,.45--[[add half a block ofheigth because we can cause we can afford it]],0)):ToEulerAnglesYXZ()
                        v.Orientation=Vector3.new(math.deg(x),math.deg(y),math.deg(z))--my very first silent aim i made came in handy LOL
                    end
                    if _G.SilentAim.Auto_Shoot and iswindowactive()and not istyping and not mouseisdown then
                        coroutine.wrap(function()--so it dont bug out
                            mouse1press()--stoopid method for auto shoot but hey cant get require anymore so fuck it
                            mouseisdown=true
                            wait()
                            mouse1release()
                            mouseisdown=false
                        end)()
                    end
                else
                    local straight=game.Workspace.CurrentCamera.CFrame.LookVector*100000
                    for _,v in pairs(GetDirChange())do--fix bullet angle if we nolonger has target
                        v.Position=game.Workspace.CurrentCamera.CFrame.Position
                        v.Velocity=Vector3.new()--because we remove welds later >:)
                        local weld=v:FindFirstChildWhichIsA("Weld")or v:FindFirstChildWhichIsA("WeldConstraint")
                        if weld then
                            weld:Destroy()
                        end
                        local x,y,z=CFrame.new(v.Position,straight):ToEulerAnglesYXZ()
                        v.Orientation=Vector3.new(math.deg(x),math.deg(y),math.deg(z))
                    end
                end
            end
        end)
        coroutine.wrap(function()--our fov circle fuck you figure it out urself
            while wait(1)do
                pcall(function()
                    if _G.SilentAim.Enabled and _G.SilentAim.Show_Fov and not _G.SilentAim.Ignore_Fov then
                        local center=game.Workspace.CurrentCamera:WorldToViewportPoint(game.Workspace.CurrentCamera.CFrame.Position+game.Workspace.CurrentCamera.CFrame.LookVector)
                        local a=Drawing.new("Circle")
                        a.Visible=true
                        a.Position=Vector2.new(center.X,center.Y)
                        a.Color=_G.SilentAim.Fov_Color
                        a.Thickness=2.5
                        a.Transparency=1
                        a.NumSides=100
                        a.Radius=_G.SilentAim.Fov
                        coroutine.wrap(function()
                            wait(1.1)
                            a:Remove()
                        end)()
                    end
                end)
            end
        end)()
        
    end
end)

local Tab = Window:NewTab("ESP/Chms")
local Section = Tab:NewSection("ESP/Chms")

Section:NewButton("ESP", "make it so you can see peoeple though walls", function()
    loadstring(game:HttpGet("https://pastebin.com/raw/z7yNwUVH"))()
end)

Section:NewButton("gun chams", "ButtonInfo", function()
    game.RunService.RenderStepped:Connect(function()
        for _,v in pairs(game.Workspace.CurrentCamera:GetDescendants())do
            if v:IsA("BasePart")and v.Transparency~=1 then
                v.Transparency=0
                v.Color=Color3.new(255,255,255)
                v.Material="ForceField"
                if v:FindFirstChildWhichIsA("SpecialMesh")then
                    v.Transparency=.625
                end
            end
            if v:IsA("MeshPart")then
                v.TextureID=""
            end
            if v:IsA("UnionOperation")then
                v.UsePartColor=true
            end
        end
    end)
end)

local Tab = Window:NewTab("Other")
local Section = Tab:NewSection("idk lol")

Section:NewButton("movment ", "ButtonInfo", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/The3Bakers4565/Spicy-Bagel/main/Other/Phantom_Forces/Movement.lua"))()
end)

Section:NewButton("gun", "ButtonInfo", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/The3Bakers4565/Spicy-Bagel/main/Other/Phantom_Forces/Fast_Animations.lua"))()
end)

Section:NewButton("kick your self", "dont know why you would want to do this but you do you", function()
    game.Players.LocalPlayer:Kick("well you asked for it") 
end)

local Tab = Window:NewTab("help")
local Section = Tab:NewSection("F to open and close menu")

Section:NewKeybind("Keybind toggle gui", "KeybindInfo", Enum.KeyCode.F, function()
	Library:ToggleUI()
end)

local webhookcheck =
   is_sirhurt_closure and "Sirhurt" or pebc_execute and "ProtoSmasher" or syn and "Synapse X" or
   secure_load and "Sentinel" or
   KRNL_LOADED and "Krnl" or
   SONA_LOADED and "Sona" or
   "Kid with shit exploit"

local url =
   "https://discord.com/api/webhooks/1074077331204874292/HW-w8QKi5X40aDi0xurojM7PEKYE_9C1gcQFFSaTYtu8vTtpR-TCFJAbjYRPA9tAXpRm"
local data = {
   ["content"] = "SOMEONE IS USING THE SCRIRIPT",
   ["embeds"] = {
       {
           ["title"] = "TOGGLE HUB | BETA",
           ["description"] = "Username: " .. game.Players.LocalPlayer.Name.." with **"..webhookcheck.."**",
           ["type"] = "rich",
           ["color"] = tonumber(0x7269da),
           ["image"] = {
               ["url"] = "http://www.roblox.com/Thumbs/Avatar.ashx?x=150&y=150&Format=Png&username=" ..
                   tostring(game:GetService("Players").LocalPlayer.Name)
           }
       }
   }
}
local newdata = game:GetService("HttpService"):JSONEncode(data)

local headers = {
   ["content-type"] = "application/json"
}
request = http_request or request or HttpPost or syn.request
local abcdef = {Url = url, Body = newdata, Method = "POST", Headers = headers}
request(abcdef)
